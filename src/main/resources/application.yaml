spring:
  application:
    name: PeerRequest
  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: ${PR_KEYCLOAK_CLIENT_ID}
            client-secret: ${PR_KEYCLOAK_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            scope: openid
        provider:
          keycloak:
            issuer-uri: ${PR_KEYCLOAK_URL}/realms/${PR_KEYCLOAK_REALM}
            user-name-attribute: preferred_username
  datasource:
    url: ${PR_DATABASE_URL}
    username: ${PR_DATABASE_USER}
    password: ${PR_DATABASE_PASSWORD}
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  jpa:
    hibernate.ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true
  servlet:
    multipart:
      max-file-size: 64MB
      max-request-size: 64MB
  mail:
    host: ${PR_SMTP_SERVER}
    port: ${PR_SMTP_PORT}
    username: ${PR_SMTP_EMAIL}
    password: ${PR_SMTP_APP_PW}
    protocol: smtp
    tls: true
    properties.mail.smtp:
      auth: true
      starttls.enable: true
      ssl.trust: ${PR_SMTP_SERVER}
server:
  port: ${PORT:8080}
keycloak:
  admin:
    serverUrl: ${PR_KEYCLOAK_URL}
    realm: ${PR_KEYCLOAK_REALM}
    admin-realm: ${PR_KEYCLOAK_ADMIN_REALM:master}
    username: ${PR_KEYCLOAK_ADMIN_USER:admin}
    password: ${PR_KEYCLOAK_ADMIN_PASSWORD}
    clientId: ${PR_KEYCLOAK_ADMIN_CLIENT_ID:admin-cli}
